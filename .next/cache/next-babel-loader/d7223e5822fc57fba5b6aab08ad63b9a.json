{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nvar store;\nvar initialState = {\n  hoge: 0,\n  fuga: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"HOGE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        hoge: state.hoge + 1\n      });\n\n    case \"FUGA\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fuga: !state.fuga\n      });\n\n    default:\n      return state;\n  }\n};\n\nfunction initStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n}\n\nexport var initializeStore = function initializeStore(preloadedState) {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (false) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n}\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/Users/Kyohei/Development/materix_next/materix/store.ts"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","store","initialState","hoge","fuga","reducer","state","action","type","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAIA,IAAIC,KAAJ;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,CADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,6CACKF,KADL;AAEEH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,GAAa;AAFrB;;AAIF,SAAK,MAAL;AACE,6CACKG,KADL;AAEEF,QAAAA,IAAI,EAAE,CAACE,KAAK,CAACF;AAFf;;AAIF;AACE,aAAOE,KAAP;AAZJ;AAcD,CAfD;;AAiBA,SAASG,SAAT,GAAkD;AAAA,MAA/BC,cAA+B,uEAAdR,YAAc;AAChD,SAAOJ,WAAW,CAChBO,OADgB,EAEhBK,cAFgB,EAGhBV,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD;;AAED,OAAO,IAAMY,eAAoB,GAAG,SAAvBA,eAAuB,CAACD,cAAD,EAAkC;AAAA;;AACpE,MAAIE,MAAM,cAAGX,KAAH,6CAAYQ,SAAS,CAACC,cAAD,CAA/B,CADoE,CAGpE;AACA;;;AACA,MAAIA,cAAc,IAAIT,KAAtB,EAA6B;AAC3BW,IAAAA,MAAM,GAAGH,SAAS,iCACbR,KAAK,CAACY,QAAN,EADa,GAEbH,cAFa,EAAlB,CAD2B,CAK3B;;AACAT,IAAAA,KAAK,GAAGa,SAAR;AACD,GAZmE,CAcpE;;;AACA,aAAmC,OAAOF,MAAP,CAfiC,CAgBpE;;AACA,MAAI,CAACX,KAAL,EAAYA,KAAK,GAAGW,MAAR;AAEZ,SAAOA,MAAP;AACD,CApBM;AAsBP,OAAO,SAASG,QAAT,CAAkBb,YAAlB,EAAmD;AAAA;;AACxD,MAAMD,KAAK,GAAGJ,OAAO,CAAC;AAAA,WAAMc,eAAe,CAACT,YAAD,CAArB;AAAA,GAAD,EAAsC,CAACA,YAAD,CAAtC,CAArB;AACA,SAAOD,KAAP;AACD;;GAHec,Q","sourcesContent":["import { useMemo } from \"react\";\nimport { createStore, applyMiddleware, Store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\ntype MaterixState = ReturnType<typeof store.getState>;\n\nlet store: Store;\n\nconst initialState = {\n  hoge: 0,\n  fuga: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"HOGE\":\n      return {\n        ...state,\n        hoge: state.hoge + 1,\n      };\n    case \"FUGA\":\n      return {\n        ...state,\n        fuga: !state.fuga,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction initStore(preloadedState = initialState) {\n  return createStore(\n    reducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware())\n  );\n}\n\nexport const initializeStore: any = (preloadedState: MaterixState) => {\n  let _store = store ?? initStore(preloadedState);\n\n  // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n  if (preloadedState && store) {\n    _store = initStore({\n      ...store.getState(),\n      ...preloadedState,\n    });\n    // Reset the current store\n    store = undefined;\n  }\n\n  // For SSG and SSR always create a new store\n  if (typeof window === \"undefined\") return _store;\n  // Create the store once in the client\n  if (!store) store = _store;\n\n  return _store;\n};\n\nexport function useStore(initialState: MaterixState): any {\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}